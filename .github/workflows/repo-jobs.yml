name: internal-actions

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]
  schedule:
    - cron: '21 13 * * 2'

jobs:
  run-unit-tests:
    if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run pytest
        uses: GenapsysInc/internal-actions/reusable-actions/pytest@main
        with:
          requirements-txt: action_utils/tests/requirements.txt
  increment-version:
    if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
    name: Increment Version
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.run-increment-version.outputs.new-version }}
    steps:
      - name: Run the increment-version action
        id: run-increment-version
        uses: GenapsysInc/internal-actions/reusable-actions/increment-version@main
        with:
          protect-tag: true
          token: ${{ secrets.GH_REST_API_TOKEN }}
  check-version:
    if: ${{ github.event_name == 'pull_request' }}
    name: Check Version
    runs-on: ubuntu-latest
    steps:
      - name: Run the check-version action
        id: run-check-version
        uses: GenapsysInc/internal-actions/reusable-actions/check-version@version-bump-check-test
        with:
          include-paths: '*.py *.yml'
          exclude-paths: 'docs action_utils/tests'
          token: ${{ secrets.GH_ACTIONS }}

  # sonarqube:
  #   if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
  #   name: SonarQube
  #   runs-on: ubuntu-latest
  #   needs: run-unit-tests
  #   steps:
  #     - uses: GenapsysInc/internal-actions/reusable-actions/sonarqube@main
  #       with:
  #         token: ${{ secrets.SONAR_TOKEN }}
  #         url: ${{ secrets.SONAR_HOST_URL }}
  codeql:
    if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' || github.event_name == 'schedule' }}
    name: CodeQL ${{ matrix.language }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [python]
    steps:
      - name: Run CodeQL action with language ${{ matrix.language }}
        uses: GenapsysInc/internal-actions/reusable-actions/codeql@main
        with:
          language: ${{ matrix.language }}
  doc-build:
    if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
    name: Doc Builder
    needs: increment-version
    runs-on: ubuntu-latest
    steps:
      - name: Documentation build and publish
        uses: GenapsysInc/internal-actions/reusable-actions/build-docs@main
        with:
          token: ${{ secrets.GHCR_TOKEN }}
          confluence_secret: ${{ secrets.CONFLUENCE_SECRET }}
          build_confluence: true
          publish_confluence: ${{ github.event_name == 'push' }}
          build_html: true
          publish_html: ${{ github.event_name == 'push' }}
          warn_as_errors: true
          version: ${{ needs.increment-version.outputs.new-version }}
          api_dirs: action_utils
  static-analysis:
    name: Static Analysis
    uses: GenapsysInc/internal-actions/.github/workflows/static-analysis.yml@main
    with:
      requirements-txt: action_utils/tests/requirements.txt
